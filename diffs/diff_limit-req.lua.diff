17,19c17,21
< local limit_req_new = require("resty.limit.req").new
< local core = require("apisix.core")
< local plugin_name = "limit-req"
---
> local limit_req_new                     = require("resty.limit.req").new
> local core                              = require("apisix.core")
> local redis_schema                      = require("apisix.utils.redis-schema")
> local policy_to_additional_properties   = redis_schema.schema
> local plugin_name                       = "limit-req"
21a24,28
> local redis_single_new
> local redis_cluster_new
> do
>     local redis_src = "apisix.plugins.limit-req.limit-req-redis"
>     redis_single_new = require(redis_src).new
22a30,34
>     local cluster_src = "apisix.plugins.limit-req.limit-req-redis-cluster"
>     redis_cluster_new = require(cluster_src).new
> end
> 
> 
26a39
> 
36a50,54
>         policy = {
>             type = "string",
>             enum = {"redis", "redis-cluster", "local"},
>             default = "local",
>         },
48c66,84
<     required = {"rate", "burst", "key"}
---
>     required = {"rate", "burst", "key"},
>     ["if"] = {
>         properties = {
>             policy = {
>                 enum = {"redis"},
>             },
>         },
>     },
>     ["then"] = policy_to_additional_properties.redis,
>     ["else"] = {
>         ["if"] = {
>             properties = {
>                 policy = {
>                     enum = {"redis-cluster"},
>                 },
>             },
>         },
>         ["then"] = policy_to_additional_properties["redis-cluster"],
>     }
54c90
<     priority = 999,
---
>     priority = 1001,
71,72c107,121
<     core.log.info("create new limit-req plugin instance")
<     return limit_req_new("plugin-limit-req", conf.rate, conf.burst)
---
>     if conf.policy == "local" then
>         core.log.info("create new limit-req plugin instance")
>         return limit_req_new("plugin-limit-req", conf.rate, conf.burst)
> 
>     elseif conf.policy == "redis" then
>         core.log.info("create new limit-req redis plugin instance")
>         return redis_single_new("plugin-limit-req", conf, conf.rate, conf.burst)
> 
>     elseif conf.policy == "redis-cluster" then
>         core.log.info("create new limit-req redis-cluster plugin instance")
>         return redis_cluster_new("plugin-limit-req", conf, conf.rate, conf.burst)
> 
>     else
>         return nil, "policy enum not match"
>     end
