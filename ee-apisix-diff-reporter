#!/bin/bash

# Check if the script is run from the correct directory
current_dir=$(basename "$PWD")
# Create output markdown file
output_file="diff_report.md"
echo "# Diff Report" > "$output_file"
echo "## Files compared between apisix and api7-ee-3-gateway." >> "$output_file"

echo "| Filepath | Diff | Related PRs |" >> "$output_file"
echo "|----------|------|-------------|" >> "$output_file"

# Take filepath argument
filepath="$1"
if [[ -z "$filepath" ]]; then
    echo "Filepath argument is required."
    exit 1
fi

# Recursively process files if directory
if [[ -d "$filepath" ]]; then
    # Remove trailing slash if present
    filepath="${filepath%/}"
    echo "Processing directory $filepath"
    files=$(find "$filepath" -type f)
else
     echo "Processing file $filepath"
    files="$filepath"
fi

if [[ "$current_dir" == "apisix" ]]; then
    # Switch to sibling api7-ee-3-gateway directory
    cd .. || exit 1
    cd api7-ee-3-gateway || { echo "Could not enter api7-ee-3-gateway"; exit 1; }
elif [[ "$current_dir" != "api7-ee-3-gateway" ]]; then
    echo "This script can only be run in apisix or api7-ee-3-gateway directories. Please make sure they are siblings."
    exit 1
fi

# Helper function to process a single file
process_file() {
    local file="$1"
    local f1=""
    local f2=""
    local diff_file="diffs/diff_$(basename "$file").diff"
    local related_prs=""

    # Ensure we are on the main branch in api7-ee-3-gateway
    git checkout main || { echo "Failed to checkout main in api7-ee-3-gateway"; exit 1; }

    # Try to read file contents relative to api7-ee-3-gateway
    if [[ -f "$file" ]]; then
        f1=$(cat "$file")
        related_prs="Manually check the commit differences here: https://github.com/apache/apisix/commits/release/3.11/$file https://github.com/api7/api7-ee-3-gateway/commits/main/$file"
    else
        echo "File not present in ee gateway‚ùå"
        related_prs="CHECK APISIX"
    fi

    # Go back to apisix directory
    cd ../apisix || { echo "Could not enter apisix"; exit 1; }

    # If file not found in api7-ee-3-gateway, get it from apisix/release/3.2 branch
    if [[ -z "$f1" ]]; then
        git checkout release/3.2 || { echo "Failed to checkout release/3.2 in apisix"; exit 1; }
        if [[ -f "$file" ]]; then
            f1=$(cat "$file")
        else
            echo "File not present in release/3.2‚ùå"
        fi
    fi

    # Checkout release/3.11 branch in apisix
    git checkout release/3.11 || { echo "Failed to checkout release/3.11 in apisix"; exit 1; }

    # Get file contents for release/3.11
    if [[ -f "$file" ]]; then
        f2=$(cat "$file")
    else
        echo "File doesn't exist in release/3.11 apisix‚ùå"
    fi

    # Compare f1 and f2, save diff
    mkdir -p "$(dirname "$diff_file")"
    diff <(echo "$f1") <(echo "$f2") > "$diff_file"

    if [[ -s "$diff_file" ]]; then
        echo "Diff found and saved to $diff_file ‚úÖ"

        # Calculate related PRs if f1 is from release/3.2
        if [[ "$related_prs" == "CHECK APISIX" ]]; then
            related_prs=""
            local start_commit
            start_commit=$(git rev-parse release/3.2)
            # Traverse merge commits and check diffs for the file
            # Normalize file path to match git output
            normalized_file=$(echo "$file" | sed 's|^\./||')
            # Traverse merge commits and check diffs for the file
            for commit in $(git log --pretty=format:"%H" release/3.2..release/3.11); do
                if git diff --name-only "$commit^1" "$commit" | grep -q "^$normalized_file$"; then
                    pr_number=$(git log -1 --pretty=%B "$commit" | grep -oE '#[0-9]+' | sed 's/#//')
                    if [[ -n "$pr_number" ]]; then
                        related_prs+="github.com/apache/apisix/pull/$pr_number,"
                    fi
                fi
            done

            related_prs=$(echo "$related_prs" | tr ',' '\n' | sort -u | tr '\n' ',' | sed 's/^,//; s/,$//; s/,/, /g')
        fi

        echo "| $file | Diff found and saved to $diff_file ‚úÖ | ${related_prs:-could not compute} |" >> "$output_file"
    else
        echo "No difference found between the files.üíØ"
        echo "| $file | No diff üíØ | - |" >> "$output_file"
        rm "$diff_file"
    fi

    # Switch back to api7-ee-3-gateway
    cd ../api7-ee-3-gateway || exit 1
}



# Process each file
for file in $files; do
    echo "Processing $file"
    process_file "$file"
done


# Final message
echo "Diff report generated in $output_file ‚úÖ"
